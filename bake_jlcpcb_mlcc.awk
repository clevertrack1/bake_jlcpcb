# take jlcpcb smd parts list extract basic Components 
BEGIN {
	FPAT = "([^ ]+)|(\"[^\"]+\")"
	OFS = " ";
	ORS="\n"  # windows end of line 

#	FP_C = "\"Capacitor_SMD:C_0402_1005Metric\""	
	FP_C = "\"Capacitor_SMD:C_0603_1608Metric\""
#	FP_C = "\"Capacitor_SMD:C_0805_2012Metric\""	
#	FP_C = "\"Capacitor_SMD:C_1206_3216Metric\""
#	FP_C = "\"Capacitor_SMD:C_1210_3225Metric\""	
#	FP_C = "\"Capacitor_SMD:C_1812_4532Metric\""
#	FP_C = "\"Capacitor_SMD:C_2211_5628Metric\""	
#	FP_C = "\"Capacitor_SMD:C_2220_5650Metric\""
	
	//LCSC Part numbers

C0402["0.1pF"] = "C384683"
C0402["0.3pF"] = "C161519"
C0402["0.5pF"] = "C86284"
C0402["0.8pF"] = "C326068"
C0402["1.2nF"] = "C16529"
C0402["1.2pF"] = "C159809"
C0402["1.5nF"] = "C23967"
C0402["1.5pF"] = "C1552"
C0402["1.8nF"] = "C5296"
C0402["1.8pF"] = "C307444"
C0402["100nF"] = "C1525"
C0402["100pF"] = "C1546"
C0402["10nF"] = "C15195"
C0402["10pF"] = "C32949"
C0402["10uF"] = "C15525"
C0402["120pF"] = "C76949"
C0402["12pF"] = "C1547"
C0402["150nF"] = "C51554"
C0402["150pF"] = "C1527"
C0402["15pF"] = "C1548"
C0402["180pF"] = "C12209"
C0402["18nF"] = "C23688"
C0402["18pF"] = "C1549"
C0402["1nF"] = "C1523"
C0402["1pF"] = "C1550"
C0402["1uF"] = "C52923"
C0402["2.2nF"] = "C1531"
C0402["2.2pF"] = "C1559"
C0402["2.2uF"] = "C12530"
C0402["2.4pF"] = "C318575"
C0402["2.7nF"] = "C84704"
C0402["2.7pF"] = "C1561"
C0402["20pF"] = "C1554"
C0402["220nF"] = "C16772"
C0402["220pF"] = "C1530"
C0402["22nF"] = "C1532"
C0402["22pF"] = "C1555"
C0402["24pF"] = "C22728"
C0402["270pF"] = "C301975"
C0402["27pF"] = "C1557"
C0402["2pF"] = "C1558"
C0402["3.3nF"] = "C26404"
C0402["3.3pF"] = "C1565"
C0402["3.9nF"] = "C18047"
C0402["3.9pF"] = "C48151"
C0402["30pF"] = "C1570"
C0402["330nF"] = "C307420"
C0402["330pF"] = "C13533"
C0402["33nF"] = "C1585"
C0402["33pF"] = "C1562"
C0402["39nF"] = "C18048"
C0402["39pF"] = "C106223"
C0402["3pF"] = "C318583"
C0402["4.3pF"] = "C159803"
C0402["4.7nF"] = "C1538"
C0402["4.7pF"] = "C1569"
C0402["4.7uF"] = "C23733"
C0402["470nF"] = "C47339"
C0402["470pF"] = "C1537"
C0402["47nF"] = "C26403"
C0402["47pF"] = "C1567"
C0402["4pF"] = "C318615"
C0402["5.6pF"] = "C318596"
C0402["51pF"] = "C111774"
C0402["560pF"] = "C318606"
C0402["56nF"] = "C12466"
C0402["56pF"] = "C1572"
C0402["5pF"] = "C318616"
C0402["6.2pF"] = "C541342"
C0402["6.8nF"] = "C1542"
C0402["6.8pF"] = "C1576"
C0402["680nF"] = "C34850"
C0402["680pF"] = "C26410"
C0402["68nF"] = "C12529"
C0402["68pF"] = "C14441"
C0402["6pF"] = "C30274"
C0402["7.5pF"] = "C43514"
C0402["7pF"] = "C307438"
C0402["8.2nF"] = "C307436"
C0402["8.2pF"] = "C318599"
C0402["820pF"] = "C307452"
C0402["82pF"] = "C13532"
C0402["8pF"] = "C26408"
C0402["91pF"] = "C541365"
C0402["9pF"] = "C111805"
C0603["0.1pF"] = "C304680"
C0603["0.3pF"] = "C170140"
C0603["0.5pF"] = "C296716"
C0603["0.75pF"] = "C170124"
C0603["0.8pF"] = "C21357"
C0603["1.2nF"] = "C30615"
C0603["1.2pF"] = "C159795"
C0603["1.5nF"] = "C1595"
C0603["1.5pF"] = "C1639"
C0603["1.8nF"] = "C154498"
C0603["1.8pF"] = "C170133"
C0603["100nF"] = "C14663"
C0603["100pF"] = "C14858"
C0603["10nF"] = "C57112"
C0603["10pF"] = "C1634"
C0603["10uF"] = "C19702"
C0603["11pF"] = "C156474"
C0603["120nF"] = "C29901"
C0603["120pF"] = "C18438"
C0603["12nF"] = "C1593"
C0603["12pF"] = "C38523"
C0603["130pF"] = "C237179"
C0603["13pF"] = "C170137"
C0603["150nF"] = "C21118"
C0603["150pF"] = "C1594"
C0603["15nF"] = "C1596"
C0603["15pF"] = "C1644"
C0603["16pF"] = "C170135"
C0603["180pF"] = "C18437"
C0603["18pF"] = "C1647"
C0603["1nF"] = "C1588"
C0603["1pF"] = "C23969"
C0603["1uF"] = "C15849"
C0603["2.2nF"] = "C1604"
C0603["2.2pF"] = "C84711"
C0603["2.2uF"] = "C23630"
C0603["2.4pF"] = "C170131"
C0603["2.5pF"] = "C170130"
C0603["2.7nF"] = "C1609"
C0603["2.7pF"] = "C16149"
C0603["200pF"] = "C1600"
C0603["20pF"] = "C1648"
C0603["220nF"] = "C21120"
C0603["220pF"] = "C1603"
C0603["22nF"] = "C21122"
C0603["22pF"] = "C1653"
C0603["22uF"] = "C59461"
C0603["24pF"] = "C307503"
C0603["25pF"] = "C159793"
C0603["270pF"] = "C1657"
C0603["27nF"] = "C1700"
C0603["27pF"] = "C1656"
C0603["2nF"] = "C170147"
C0603["2pF"] = "C21895"
C0603["3.3nF"] = "C1613"
C0603["3.3pF"] = "C85300"
C0603["3.3uF"] = "C51412"
C0603["3.6pF"] = "C85301"
C0603["3.9nF"] = "C170145"
C0603["3.9pF"] = "C85302"
C0603["300pF"] = "C159791"
C0603["30pF"] = "C22397"
C0603["330nF"] = "C1615"
C0603["330pF"] = "C1664"
C0603["33nF"] = "C21117"
C0603["33pF"] = "C1663"
C0603["36pF"] = "C159790"
C0603["390nF"] = "C152941"
C0603["390pF"] = "C84719"
C0603["39pF"] = "C53278"
C0603["3pF"] = "C46219"
C0603["4.3pF"] = "C16148"
C0603["4.7nF"] = "C53987"
C0603["4.7pF"] = "C1669"
C0603["4.7uF"] = "C19666"
C0603["430pF"] = "C13515"
C0603["43pF"] = "C170129"
C0603["470nF"] = "C1623"
C0603["470pF"] = "C1620"
C0603["47nF"] = "C1622"
C0603["47pF"] = "C1671"
C0603["4pF"] = "C307494"
C0603["5.1nF"] = "C1587"
C0603["5.6nF"] = "C170143"
C0603["5.6pF"] = "C123584"
C0603["510pF"] = "C170144"
C0603["51pF"] = "C159787"
C0603["560pF"] = "C84721"
C0603["56nF"] = "C519436"
C0603["56pF"] = "C39148"
C0603["5pF"] = "C93045"
C0603["6.8nF"] = "C1631"
C0603["6.8pF"] = "C1679"
C0603["620pF"] = "C325470"
C0603["62pF"] = "C62683"
C0603["680nF"] = "C12479"
C0603["680pF"] = "C1630"
C0603["68nF"] = "C31658"
C0603["68pF"] = "C28262"
C0603["6pF"] = "C37474"
C0603["7.5pF"] = "C170127"
C0603["750pF"] = "C318647"
C0603["75pF"] = "C159786"
C0603["7pF"] = "C53775"
C0603["8.2nF"] = "C27920"
C0603["8.2pF"] = "C170126"
C0603["820pF"] = "C153293"
C0603["82pF"] = "C1683"
C0603["9.1pF"] = "C170125"
C0603["9pF"] = "C170141"
C0805["0.5pF"] = "C159772"
C0805["1.2nF"] = "C170122"
C0805["1.5nF"] = "C1717"
C0805["1.5pF"] = "C1788"
C0805["100nF"] = "C49678"
C0805["100pF"] = "C1790"
C0805["10nF"] = "C1710"
C0805["10pF"] = "C1785"
C0805["10uF"] = "C15850"
C0805["120nF"] = "C376931"
C0805["120pF"] = "C159770"
C0805["12pF"] = "C1792"
C0805["13pF"] = "C37059"
C0805["150nF"] = "C307539"
C0805["150pF"] = "C1716"
C0805["15nF"] = "C52412"
C0805["15pF"] = "C1794"
C0805["180pF"] = "C62914"
C0805["18pF"] = "C1797"
C0805["1nF"] = "C46653"
C0805["1pF"] = "C14971"
C0805["1uF"] = "C28323"
C0805["2.2nF"] = "C28260"
C0805["2.2uF"] = "C49217"
C0805["2.7nF"] = "C170119"
C0805["2.7pF"] = "C1803"
C0805["200pF"] = "C1724"
C0805["20nF"] = "C307540"
C0805["20pF"] = "C1798"
C0805["220nF"] = "C5378"
C0805["220pF"] = "C53172"
C0805["22nF"] = "C1729"
C0805["22pF"] = "C1804"
C0805["22uF"] = "C45783"
C0805["240pF"] = "C36982"
C0805["24pF"] = "C1806"
C0805["25pF"] = "C170107"
C0805["270nF"] = "C20008"
C0805["270pF"] = "C170120"
C0805["27pF"] = "C8031"
C0805["2pF"] = "C1800"
C0805["3.3nF"] = "C53175"
C0805["3.3pF"] = "C159765"
C0805["3.3uF"] = "C159775"
C0805["3.9pF"] = "C159764"
C0805["30pF"] = "C1809"
C0805["330nF"] = "C1740"
C0805["330pF"] = "C51207"
C0805["33nF"] = "C1739"
C0805["33pF"] = "C1814"
C0805["33uF"] = "C342635"
C0805["360pF"] = "C307552"
C0805["36pF"] = "C327231"
C0805["390pF"] = "C170118"
C0805["39pF"] = "C296098"
C0805["3pF"] = "C159773"
C0805["4.7nF"] = "C1744"
C0805["4.7pF"] = "C1820"
C0805["4.7uF"] = "C1779"
C0805["470nF"] = "C13967"
C0805["470pF"] = "C1743"
C0805["47nF"] = "C53134"
C0805["47pF"] = "C14857"
C0805["47uF"] = "C16780"
C0805["4pF"] = "C170115"
C0805["5.6nF"] = "C153719"
C0805["51pF"] = "C50206"
C0805["560pF"] = "C159763"
C0805["56nF"] = "C1753"
C0805["56pF"] = "C1828"
C0805["5pF"] = "C170114"
C0805["6.8nF"] = "C1755"
C0805["6.8pF"] = "C1832"
C0805["620pF"] = "C307556"
C0805["62pF"] = "C170104"
C0805["680nF"] = "C71069"
C0805["680pF"] = "C53150"
C0805["68nF"] = "C1756"
C0805["68pF"] = "C1834"
C0805["6pF"] = "C67560"
C0805["75pF"] = "C10417"
C0805["7pF"] = "C170112"
C0805["8.2nF"] = "C170117"
C0805["820pF"] = "C53154"
C0805["82pF"] = "C170103"
C0805["8pF"] = "C170111"
C1206["100nF"] = "C24497"
C1206["100pF"] = "C159750"
C1206["100uF"] = "C15008"
C1206["10nF"] = "C1846"
C1206["10pF"] = "C326850"
C1206["10uF"] = "C13585"
C1206["1nF"] = "C35216"
C1206["1uF"] = "C1848"
C1206["2.2nF"] = "C35220"
C1206["2.2uF"] = "C50254"
C1206["220nF"] = "C1857"
C1206["220pF"] = "C1854"
C1206["22nF"] = "C47526"
C1206["22pF"] = "C313096"
C1206["22uF"] = "C5672"
C1206["3.3nF"] = "C437496"
C1206["3.3uF"] = "C66012"
C1206["330nF"] = "C318760"
C1206["330pF"] = "C1907"
C1206["33nF"] = "C1864"
C1206["4.7uF"] = "C29823"
C1206["470nF"] = "C1871"
C1206["470pF"] = "C1868"
C1206["47nF"] = "C307574"
C1206["47uF"] = "C96123"
C1206["56pF"] = "C1919"
C1206["680nF"] = "C159753"
C1206["68nF"] = "C107210"
C1206["68pF"] = "C107178"
C1210["100nF"] = "C412504"
C1210["100uF"] = "C23742"
C1210["10uF"] = "C66120"
C1210["1nF"] = "C173219"
C1210["1uF"] = "C159746"
C1210["2.2uF"] = "C55151"
C1210["220nF"] = "C363568"
C1210["22uF"] = "C19659"
C1210["330nF"] = "C54549"
C1210["4.7uF"] = "C47783"
C1210["47uF"] = "C77101"
C1812["100nF"] = "C410825"
C1812["10nF"] = "C20037"
C1812["10uF"] = "C377138"
C1812["1nF"] = "C304032"
C1812["2.2uF"] = "C382097"
C1812["4.7nF"] = "C326696"
C2220["470nF"] = "C342298"
}

function r_value_index( instring ) {
	val = match( instring, /[^"]+[^"]/)
	found = "#error"
	if (val) {
		instring = substr(instring, RSTART, RLENGTH)
		val = match( instring, /[pnu][0-9]+/)
		if (val){
			if (RLENGTH == 1){
				found = substr(instring,1, RSTART-1) substr(instring,RSTART,1)
			} else {
				found = substr(instring,1, RSTART-1) "." substr(instring,RSTART+1) substr(instring,RSTART,1)
			}	
			instring = found
		}
		val = match( instring, /[pnu]F/)
		if (val){
			instring = substr(instring,1, RSTART+2)
		} else {
			add_error = 1
			error_msg = "Capacitor Value not correct " instring
		}
	}
	return instring
}

function JLCPCB_output( ) {
	if (add_lcsc ) {
		
		if ( fp ~ FP_C ){
			value = r_value_index(value)

			f_field += 1
			if (value in C0805){
				lcsc = C0805[value]
			}
			print "F " f_field " \"" lcsc "\" " orientation " " posx " " posy " " size "  0001 " justify " " style " \"LCSC\"";
			fp =""
		}
		add_lcsc = 0
	}
	ERROR_output()
}

function ERROR_output( ) {
	if (add_error ){
		f_field += 1	
		print "F " f_field " \"" error_msg "\" " orientation " " posx " " posy " " size "  0000 " justify " " style " \"ERROR\"";
		add_error = 0
	}
}

$1 ~ /\$Comp/    { Component = 1; print $0 ; next; }

$1 ~ /\$EndComp/  { 
		# add a field
		JLCPCB_output()
		Component = 0
		print $0;
		next;		
	}

    { if (Component != 1 ){
		print $0 ; 
		next; 
		}
	}

$1 ~ /L/ {
		add_lcsc = 0
		device = $2
        # name reference 
		# ($2 ~ /Device:C/)  match capacitor
		# ($2 ~ /Device:R/) match R
    }
		
$1 ~ /U/ {
        # time stamp
    }  		


$1 ~ /P/ {
        # position
		posx = $2; posy = $3;
    }

$1 ~ /F/ {
		f_field = $2
        if ($2 ~ /0/) { 
			# reference, orientation, posx, posy, size, flags, hor_justify, style, <“field_name”>
			ref = $3; orientation = $4; size = $7; flags = $8 ; justify = $9 ; style = $10
		}			
		if ($2 ~ /1/) { 
			# value, orientation, posx, posy, size, flags, hor_justify, style
			value = $3
		}
        if ($2 ~ /2/) { 
			# footprint, orientation, posx, posy, size, flags, hor_justify, style
			fp    = $3; 
			if (device ~ /Device:C/){ 
				if (! (device ~ /Device:CP/)){ 
					if ( 1 || fp ~ "\"\""){
						fp = FP_C 
						$3 = FP_C 
						$0 = $0
					}
					add_lcsc = 1
				}
			}
		} 
		if ($2 ~ /3/) {  
			# datasheet, orientation, posx, posy, size, flags, hor_justify, style
		}
		if ( $11 ~ /LCSC/){	
			if ( fp ~ FP_C ){
				rindex = r_value_index(value)
				if (rindex in C0805){
					if ($3 !~ C0805[rindex] ){
						add_error = 1
						error_msg =  "expected " C0805[rindex]
					}				
				}
			}				
			add_lcsc = 0
		}
    }
	
$1 !~ /F/	{
		JLCPCB_output( )
	}

	{ print $0; 
	 next;
	}
